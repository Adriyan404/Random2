# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sat May 13 02:51:07 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))